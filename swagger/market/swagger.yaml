definitions:
  dto.IDResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.OfferSpecs:
    properties:
      offers:
        items:
          $ref: '#/definitions/models.Offer'
        type: array
      total:
        type: integer
    type: object
  dto.Offers:
    properties:
      contractNumber:
        type: string
      loanAmount:
        type: string
      loanLength:
        type: string
      monthlyPayment:
        type: integer
      product:
        type: string
      productType:
        type: string
    type: object
  dto.OrderRequest:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      amount:
        type: string
      channel:
        type: string
      cityId:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
      isDelivery:
        type: boolean
      loanLength:
        type: integer
      paymentMethod:
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/models.PaymentPartners'
        type: array
      productType:
        type: string
      redirectUrl:
        type: string
      systemCode:
        type: string
      verificationId:
        type: string
      verificationSmsCode:
        type: string
      verificationSmsDateTime:
        type: string
    type: object
  dto.OrderResponse:
    properties:
      code:
        type: string
      message:
        type: string
      offers:
        items:
          $ref: '#/definitions/dto.Offers'
        type: array
      redirectUrl:
        type: string
      requestUuid:
        type: string
      state:
        type: string
      state_title:
        type: string
      status:
        type: string
    type: object
  dto.TokenResponse:
    properties:
      access_token:
        type: string
      response_token:
        type: string
    type: object
  httperrors.Details:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  httperrors.Response:
    properties:
      error:
        $ref: '#/definitions/httperrors.Details'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.Address:
    properties:
      delivery:
        type: string
      pickupPoint:
        type: string
    type: object
  models.Contact:
    properties:
      email:
        type: string
      mobileNumber:
        type: string
    type: object
  models.Customer:
    properties:
      contact:
        $ref: '#/definitions/models.Contact'
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      taxCode:
        type: string
    type: object
  models.Goods:
    properties:
      brand:
        type: string
      category:
        type: string
      image:
        type: string
      model:
        type: string
      price:
        type: string
    type: object
  models.Offer:
    properties:
      created_at:
        type: string
      id:
        type: string
      max_order_sum:
        type: integer
      min_order_sum:
        type: integer
      name:
        type: string
      partner_code:
        type: string
      payment_type_group_code:
        type: string
      updated_at:
        type: string
    type: object
  models.PaymentPartners:
    properties:
      code:
        type: string
    type: object
info:
  contact: {}
paths:
  /markets/login:
    post:
      consumes:
      - application/json
      description: Авторизация маркета
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация маркета
      tags:
      - Market
  /markets/logout:
    get:
      consumes:
      - application/json
      description: выход с авторизации маркета
      produces:
      - application/json
      summary: выход с авторизации маркета
      tags:
      - Market
  /offers:
    get:
      consumes:
      - application/json
      description: Получение офферов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OfferSpecs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение офферов
      tags:
      - Offers
  /orders:
    post:
      consumes:
      - application/json
      description: Создание нового заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.OrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового заказа
      tags:
      - Orders
  /orders/{reference_id}/partners:
    get:
      description: Получение заказов по reference_id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: reference id of the order
        in: path
        name: reference_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.OrderResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов по reference_id
      tags:
      - Orders
swagger: "2.0"
