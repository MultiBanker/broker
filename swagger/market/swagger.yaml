definitions:
  dto.BrokerResponse:
    properties:
      reference_id:
        type: string
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.MarketOrderRequest:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      amount:
        example: "5000"
        type: string
      channel:
        example: airba_web
        type: string
      cityId:
        example: "050000"
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
      isDelivery:
        example: true
        type: boolean
      loanLength:
        example: 12
        type: integer
      paymentMethod:
        example: annuity
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/models.PaymentPartners'
        type: array
      productType:
        example: installment
        type: string
      redirectUrl:
        example: https://airba.kz/order/ok
        type: string
      systemCode:
        example: oms
        type: string
      verificationId:
        example: dsad12
        type: string
      verificationSmsCode:
        example: "12321"
        type: string
      verificationSmsDateTime:
        example: 12.12.2020
        type: string
    type: object
  dto.OffersRequest:
    properties:
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
    type: object
  dto.TokenResponse:
    properties:
      access_token:
        type: string
      response_token:
        type: string
    type: object
  dto.UpdateMarketOrderRequest:
    properties:
      loanLength:
        type: string
      productCode:
        type: string
      reason:
        type: string
      referenceId:
        type: string
      state:
        type: string
      stateTitle:
        type: string
    type: object
  httperrors.Details:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  httperrors.Response:
    properties:
      error:
        $ref: '#/definitions/httperrors.Details'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.Address:
    properties:
      delivery:
        example: track
        type: string
      pickupPoint:
        example: Kurmangazy 77
        type: string
    type: object
  models.Contact:
    properties:
      email:
        example: jon@mail.ru
        type: string
      mobileNumber:
        example: "87777777777"
        type: string
    type: object
  models.Customer:
    properties:
      contact:
        $ref: '#/definitions/models.Contact'
      firstName:
        example: Jon
        type: string
      lastName:
        example: Bones
        type: string
      middleName:
        example: Jones
        type: string
      taxCode:
        example: "832918392183"
        type: string
    type: object
  models.Goods:
    properties:
      brand:
        example: iphone
        type: string
      category:
        example: smartphony
        type: string
      image:
        example: https://cdn.dxomark.com/wp-content/uploads/medias/post-61183/iphone-12-pro-blue-hero.jpg
        type: string
      model:
        example: 12 PRO
        type: string
      price:
        example: "5000"
        type: string
    type: object
  models.Offer:
    properties:
      created_at:
        type: string
      id:
        type: string
      max_order_sum:
        type: integer
      min_order_sum:
        type: integer
      name:
        type: string
      partner_code:
        type: string
      payment_type_group_code:
        type: string
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      channel:
        type: string
      created_at:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
      id:
        type: string
      isDelivery:
        type: boolean
      loanLength:
        type: string
      orderState:
        type: string
      paymentMethod:
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/models.PaymentPartners'
        type: array
      productType:
        type: string
      reason:
        type: string
      redirectUrl:
        type: string
      referenceId:
        type: string
      salesPlace:
        type: string
      systemCode:
        type: string
      totalCost:
        type: string
      updated_at:
        type: string
      verificationId:
        type: string
      verificationSmsCode:
        type: string
      verificationSmsDateTime:
        type: string
    type: object
  models.PaymentPartners:
    properties:
      code:
        example: airba_pay
        type: string
    type: object
  models.Response:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /markets/login:
    post:
      consumes:
      - application/json
      description: Авторизация маркета
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация маркета
      tags:
      - Market
  /markets/logout:
    get:
      consumes:
      - application/json
      description: выход с авторизации маркета
      produces:
      - application/json
      summary: выход с авторизации маркета
      tags:
      - Market
  /offers:
    get:
      consumes:
      - application/json
      description: Получение офферов по заказу
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.OffersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Offer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение офферов по заказу
      tags:
      - Offers
  /orders:
    post:
      consumes:
      - application/json
      description: Создание нового заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.MarketOrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrokerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового заказа
      tags:
      - Orders
  /orders/{reference_id}/partners:
    get:
      description: Получение заказов по reference_id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: reference id of the order
        in: path
        name: reference_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов по reference_id
      tags:
      - Orders
  /orders/markets:
    post:
      consumes:
      - application/json
      description: Обновление заказа по решению клиента
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMarketOrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа по решению клиента
      tags:
      - Orders
swagger: "2.0"
