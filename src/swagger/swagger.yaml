basePath: /broker/api/v1/broker
definitions:
  dto.ContactInfo:
    properties:
      bin:
        description: БИН организации
        example: "5189011425"
        type: string
      email:
        description: Имейл
        example: oleg@tinkoff.ru
        type: string
      first_name:
        description: Имя
        example: Oleg
        type: string
      last_name:
        description: Фамилия
        example: Tinkoff
        type: string
      location:
        description: Адрес организации
        example: Bldg. 26, 38A, 2 Khutorskaya str., Moscow, Russia.
        type: string
      phone:
        description: Телефон
        example: "87777777777"
        type: string
      web_address:
        description: Веб адрес организации
        example: https://www.tinkoff.ru
        type: string
    type: object
  dto.FIO:
    properties:
      firstName:
        example: Jon
        type: string
      lastName:
        example: Bones
        type: string
      middleName:
        example: Jones
        type: string
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.MarketOrderRequest:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      amount:
        example: "5000"
        type: string
      channel:
        example: airba_web
        type: string
      cityId:
        example: "050000"
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
      isDelivery:
        example: true
        type: boolean
      loanLength:
        example: 12
        type: integer
      paymentMethod:
        example: annuity
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/models.PaymentPartners'
        type: array
      productType:
        example: installment
        type: string
      redirectUrl:
        example: https://airba.kz/order/ok
        type: string
      systemCode:
        example: oms
        type: string
      verificationId:
        example: dsad12
        type: string
      verificationSmsCode:
        example: "12321"
        type: string
      verificationSmsDateTime:
        example: 12.12.2020
        type: string
    type: object
  dto.MarketRequest:
    properties:
      code:
        description: Код картинки
        example: tinkoff
        type: string
      company_name:
        description: Название компании
        example: Tinka
        type: string
      contact:
        $ref: '#/definitions/dto.ContactInfo'
        description: Контакт
      enabled:
        description: Включение
        example: true
        type: boolean
      logo_url:
        description: Веб адрес картинки
        example: https://plusworld.ru/wp-content/uploads/2021/09/759950f2eafdab128b887f1296316ea6f1af5152.jpg
        type: string
      password:
        description: Пароль
        example: Password123
        type: string
      update_order_url:
        description: Обновление заказов
        example: https://google.com
        type: string
      username:
        description: Имя пользователя
        example: Olejka
        type: string
    type: object
  dto.Markets:
    properties:
      markets:
        items:
          $ref: '#/definitions/models.Market'
        type: array
      total:
        type: integer
    type: object
  dto.OfferRequest:
    properties:
      max_order_sum:
        description: Максимальная сумма заказа
        example: 1500000
        type: integer
      min_order_sum:
        description: Минимальная сумма заказа
        example: 10000
        type: integer
      name:
        description: Наименование
        example: МФО Аирба
        type: string
      partner_code:
        description: Код партнера
        example: airba_pay
        type: string
      payment_type_group_code:
        description: Вид оплаты товара
        example: online_broker
        type: string
    type: object
  dto.OrderPartnerUpdateRequest:
    properties:
      customer:
        $ref: '#/definitions/dto.FIO'
      offers:
        items:
          $ref: '#/definitions/models.Offers'
        type: array
      referenceId:
        example: "1"
        type: string
      state:
        example: order_confirmed
        type: string
      stateTitle:
        example: order_confirmed
        type: string
    type: object
  dto.Orders:
    properties:
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      total:
        type: integer
    type: object
  dto.PartnerRequest:
    properties:
      code:
        description: Код партнера
        example: airba_pay
        type: string
      commission:
        description: Коммиссия
        example: 5
        type: integer
      company_name:
        description: Название компании
        example: Airba Pay
        type: string
      contact:
        $ref: '#/definitions/dto.ContactInfo'
        description: Контактные данные
      enabled:
        description: Включен
        example: true
        type: boolean
      logo_url:
        description: Веб адрес компании
        example: https://emotionsgroup.kz/uploads/7f47072c77ad20f58acb9e7114cfeb5c.jpg
        type: string
      password:
        description: Пароль
        example: Password123
        type: string
      url:
        $ref: '#/definitions/dto.URL'
        description: Адреса на обновления АПИ
      username:
        description: Имя пользователя
        example: SuperRinat
        type: string
    type: object
  dto.Partners:
    properties:
      partners:
        items:
          $ref: '#/definitions/models.Partner'
        type: array
      total:
        type: integer
    type: object
  dto.TokenResponse:
    properties:
      access_token:
        type: string
      response_token:
        type: string
    type: object
  dto.URL:
    properties:
      create:
        description: Урл который создает заказ на стороне партнера
        example: https://
        type: string
      update:
        description: Урл который обновляет заказ на стороне партнера
        example: https://
        type: string
    type: object
  github.com_MultiBanker_broker_src_servers_adminhttp_dto.IDResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  github.com_MultiBanker_broker_src_servers_adminhttp_dto.OfferSpecs:
    properties:
      offers:
        items:
          $ref: '#/definitions/models.Offer'
        type: array
      total:
        type: integer
    type: object
  github.com_MultiBanker_broker_src_servers_clienthttp_dto.IDResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  github.com_MultiBanker_broker_src_servers_clienthttp_dto.OfferSpecs:
    properties:
      offers:
        items:
          $ref: '#/definitions/models.Offer'
        type: array
      total:
        type: integer
    type: object
  httperrors.Details:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  httperrors.Response:
    properties:
      error:
        $ref: '#/definitions/httperrors.Details'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.Address:
    properties:
      delivery:
        example: track
        type: string
      pickupPoint:
        example: Kurmangazy 77
        type: string
    type: object
  models.Contact:
    properties:
      email:
        example: jon@mail.ru
        type: string
      mobileNumber:
        example: "87777777777"
        type: string
    type: object
  models.ContactInfo:
    properties:
      bin:
        description: БИН организации
        example: "5189011425"
        type: string
      email:
        description: Имейл
        example: oleg@tinkoff.ru
        type: string
      first_name:
        description: Имя
        example: Oleg
        type: string
      last_name:
        description: Фамилия
        example: Tinkoff
        type: string
      location:
        description: Адрес организации
        example: Bldg. 26, 38A, 2 Khutorskaya str., Moscow, Russia.
        type: string
      phone:
        description: Телефон
        example: "87777777777"
        type: string
      web_address:
        description: Веб адрес организации
        example: https://www.tinkoff.ru
        type: string
    type: object
  models.Customer:
    properties:
      contact:
        $ref: '#/definitions/models.Contact'
      firstName:
        example: Jon
        type: string
      lastName:
        example: Bones
        type: string
      middleName:
        example: Jones
        type: string
      taxCode:
        example: "832918392183"
        type: string
    type: object
  models.Goods:
    properties:
      brand:
        example: iphone
        type: string
      category:
        example: smartphony
        type: string
      image:
        example: https://cdn.dxomark.com/wp-content/uploads/medias/post-61183/iphone-12-pro-blue-hero.jpg
        type: string
      model:
        example: 12 PRO
        type: string
      price:
        example: "5000"
        type: string
    type: object
  models.Market:
    properties:
      code:
        type: string
      contact:
        $ref: '#/definitions/models.ContactInfo'
      created_at:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      logo_url:
        type: string
      password:
        type: string
      title:
        type: string
      update_order_url:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.Offer:
    properties:
      created_at:
        type: string
      id:
        type: string
      max_order_sum:
        type: integer
      min_order_sum:
        type: integer
      name:
        type: string
      partner_code:
        type: string
      payment_type_group_code:
        type: string
      updated_at:
        type: string
    type: object
  models.Offers:
    properties:
      contractNumber:
        example: d12ed1
        type: string
      loanAmount:
        example: "144000"
        type: string
      loanLength:
        example: "12"
        type: string
      monthlyPayment:
        example: 12000
        type: integer
      product:
        example: rassrochka_12
        type: string
      productType:
        example: installment
        type: string
    type: object
  models.Order:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      channel:
        type: string
      created_at:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      goods:
        items:
          $ref: '#/definitions/models.Goods'
        type: array
      id:
        type: string
      isDelivery:
        type: boolean
      loanLength:
        type: string
      orderState:
        type: string
      paymentMethod:
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/models.PaymentPartners'
        type: array
      productType:
        type: string
      redirectUrl:
        type: string
      referenceId:
        type: string
      salesPlace:
        type: string
      systemCode:
        type: string
      totalCost:
        type: string
      updated_at:
        type: string
      verificationId:
        type: string
      verificationSmsCode:
        type: string
      verificationSmsDateTime:
        type: string
    type: object
  models.Partner:
    properties:
      code:
        type: string
      commission:
        type: integer
      company_name:
        type: string
      contact:
        $ref: '#/definitions/models.ContactInfo'
      created_at:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      logo_url:
        type: string
      password:
        type: string
      updated_at:
        type: string
      url:
        $ref: '#/definitions/models.URL'
      username:
        type: string
    type: object
  models.PaymentPartners:
    properties:
      code:
        example: airba_pay
        type: string
    type: object
  models.Response:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  models.URL:
    properties:
      create:
        type: string
      update:
        type: string
    type: object
host: api.test.airba.dev
info:
  contact: {}
  description: Broker banker requester
  title: Broker API
  version: "1.0"
paths:
  /admins/markets:
    get:
      description: Получение маркетов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Markets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение маркетов
      tags:
      - Market
    post:
      consumes:
      - application/json
      description: Создание нового маркета
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.MarketRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового маркета
      tags:
      - Market
  /admins/markets/{id}:
    get:
      consumes:
      - application/json
      description: Получение маркета
      parameters:
      - description: id of the partner
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Market'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение маркета
      tags:
      - Market
    put:
      description: Обновление определенного маркета
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.MarketRequest'
      - description: id of the partner
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление определенного маркета
      tags:
      - Market
  /admins/offers:
    get:
      consumes:
      - application/json
      description: Получение офферов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_MultiBanker_broker_src_servers_adminhttp_dto.OfferSpecs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение офферов
      tags:
      - Offers
    post:
      consumes:
      - application/json
      description: Создание нового оффера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/dto.OfferRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_MultiBanker_broker_src_servers_adminhttp_dto.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового оффера
      tags:
      - Offers
  /admins/offers/{id}:
    get:
      consumes:
      - application/json
      description: Получение оффера
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the market
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Partner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение оффера
      tags:
      - Offers
    put:
      consumes:
      - application/json
      description: Обновление оффера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/dto.OfferRequest'
      - description: id of the market
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Offer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление оффера
      tags:
      - Offers
  /admins/orders:
    get:
      description: Получение заказов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Orders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов
      tags:
      - Orders
  /admins/orders/{id}:
    get:
      consumes:
      - application/json
      description: Получение заказа
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказа
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Обновление заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      - description: id of the order
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа
      tags:
      - Orders
  /admins/partners:
    get:
      consumes:
      - application/json
      description: Получение партнеров
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Partners'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение партнеров
      tags:
      - Partner
    post:
      consumes:
      - application/json
      description: Создание нового партнера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/dto.PartnerRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового партнера
      tags:
      - Partner
  /admins/partners/{id}:
    get:
      consumes:
      - application/json
      description: Получение партнера
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the market
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Partner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение партнера
      tags:
      - Partner
    put:
      consumes:
      - application/json
      description: Обновление партнера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/dto.PartnerRequest'
      - description: id of the market
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление партнера
      tags:
      - Partner
  /markets/login:
    post:
      consumes:
      - application/json
      description: Авторизация маркета
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация маркета
      tags:
      - Market
  /markets/logout:
    get:
      consumes:
      - application/json
      description: выход с авторизации маркета
      produces:
      - application/json
      summary: выход с авторизации маркета
      tags:
      - Market
  /offers:
    get:
      consumes:
      - application/json
      description: Получение офферов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_MultiBanker_broker_src_servers_clienthttp_dto.OfferSpecs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение офферов
      tags:
      - Offers
  /orders:
    post:
      consumes:
      - application/json
      description: Создание нового заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.MarketOrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_MultiBanker_broker_src_servers_clienthttp_dto.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового заказа
      tags:
      - Orders
  /orders/{reference_id}/partners:
    get:
      description: Получение заказов по reference_id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: reference id of the order
        in: path
        name: reference_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов по reference_id
      tags:
      - Orders
  /partners/login:
    post:
      consumes:
      - application/json
      description: Авторизация партнера
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация партнера
      tags:
      - Partner
  /partners/logout:
    get:
      consumes:
      - application/json
      description: выход авторизации партнера
      produces:
      - application/json
      summary: выход авторизации партнера
      tags:
      - Partner
  /partners/orders/:
    post:
      consumes:
      - application/json
      description: Обновление заказа по решению партнера
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.OrderPartnerUpdateRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа по решению партнера
      tags:
      - Orders
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
