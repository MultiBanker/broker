basePath: /broker/api/v1/broker
definitions:
  dto.Address:
    properties:
      delivery:
        type: string
      pickupPoint:
        type: string
    type: object
  dto.Contact:
    properties:
      email:
        type: string
      mobileNumber:
        type: string
    type: object
  dto.Customer:
    properties:
      contact:
        $ref: '#/definitions/dto.Contact'
      firstName:
        type: string
      iin:
        type: string
      lastName:
        type: string
      middleName:
        type: string
    type: object
  dto.FIO:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
    type: object
  dto.Goods:
    properties:
      brand:
        type: string
      category:
        type: string
      image:
        type: string
      model:
        type: string
      price:
        type: string
    type: object
  dto.IDResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.Markets:
    properties:
      markets:
        items:
          $ref: '#/definitions/models.Market'
        type: array
      total:
        type: integer
    type: object
  dto.Offers:
    properties:
      contractNumber:
        type: string
      loanAmount:
        type: string
      loanLength:
        type: string
      monthlyPayment:
        type: integer
      product:
        type: string
      productType:
        type: string
    type: object
  dto.OrderPartnerUpdateRequest:
    properties:
      customer:
        $ref: '#/definitions/dto.FIO'
      offers:
        items:
          $ref: '#/definitions/dto.Offers'
        type: array
      referenceId:
        type: string
      state:
        type: string
      stateTitle:
        type: string
    type: object
  dto.OrderRequest:
    properties:
      address:
        $ref: '#/definitions/dto.Address'
      amount:
        type: string
      channel:
        type: string
      customer:
        $ref: '#/definitions/dto.Customer'
      goods:
        items:
          $ref: '#/definitions/dto.Goods'
        type: array
      id:
        type: string
      installment:
        type: string
      is_delivery:
        type: boolean
      loanLength:
        type: string
      order_id:
        type: string
      paymentMethod:
        type: string
      paymentPartners:
        items:
          $ref: '#/definitions/dto.PaymentPartners'
        type: array
      redirect_url:
        type: string
      system_code:
        type: string
      verificationSmsCode:
        type: string
      verificationSmsDateTime:
        type: string
    type: object
  dto.OrderResponse:
    properties:
      code:
        type: string
      message:
        type: string
      offers:
        items:
          $ref: '#/definitions/dto.Offers'
        type: array
      redirectUrl:
        type: string
      requestUuid:
        type: string
      state:
        type: string
      state_title:
        type: string
      status:
        type: string
    type: object
  dto.Orders:
    properties:
      orders:
        items:
          $ref: '#/definitions/dto.OrderRequest'
        type: array
      total:
        type: integer
    type: object
  dto.Partners:
    properties:
      partners:
        items:
          $ref: '#/definitions/models.Partner'
        type: array
      total:
        type: integer
    type: object
  dto.PaymentPartners:
    properties:
      code:
        type: string
    type: object
  dto.TokenResponse:
    properties:
      access_token:
        type: string
      response_token:
        type: string
    type: object
  dto.UpdateMarketOrderRequest:
    properties:
      loanLength:
        type: string
      productCode:
        type: string
      reason:
        type: string
      referenceId:
        type: string
      state:
        type: string
      stateTitle:
        type: string
    type: object
  httperrors.Details:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  httperrors.Response:
    properties:
      error:
        $ref: '#/definitions/httperrors.Details'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.ContactInfo:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.Market:
    properties:
      bin:
        type: string
      code:
        type: string
      contact:
        $ref: '#/definitions/models.ContactInfo'
      created_at:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      location:
        type: string
      logo_url:
        type: string
      password:
        type: string
      title:
        type: string
      update_order_url:
        type: string
      updated_at:
        type: string
      username:
        type: string
      web_address:
        type: string
    type: object
  models.Partner:
    properties:
      bin:
        type: string
      code:
        type: string
      commission:
        type: integer
      company_name:
        type: string
      contact:
        $ref: '#/definitions/models.ContactInfo'
      created_at:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      logo_url:
        type: string
      password:
        type: string
      updated_at:
        type: string
      url:
        $ref: '#/definitions/models.URL'
      username:
        type: string
    type: object
  models.Response:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  models.URL:
    properties:
      create:
        type: string
      update:
        type: string
    type: object
host: api.test.airba.dev
info:
  contact: {}
  description: Broker banker requester
  title: Broker API
  version: "1.0"
paths:
  /markets:
    get:
      description: Получение маркетов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Markets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение маркетов
      tags:
      - Market
    post:
      consumes:
      - application/json
      description: Создание нового маркета
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/models.Market'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового маркета
      tags:
      - Market
  /markets/{id}:
    get:
      consumes:
      - application/json
      description: Получение маркета
      parameters:
      - description: id of the partner
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Market'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение маркета
      tags:
      - Market
    put:
      description: Обновление определенного маркета
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/models.Market'
      - description: id of the partner
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление определенного маркета
      tags:
      - Market
  /markets/login:
    post:
      consumes:
      - application/json
      description: Авторизация маркета
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация маркета
      tags:
      - Market
  /markets/logout:
    get:
      consumes:
      - application/json
      description: выход с авторизации маркета
      produces:
      - application/json
      summary: выход с авторизации маркета
      tags:
      - Market
  /orders:
    get:
      description: Получение заказов
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Orders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Создание нового заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.OrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового заказа
      tags:
      - Market-Order
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Получение заказа
      parameters:
      - description: id of the order
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказа
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Обновление заказа
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.OrderRequest'
      - description: id of the order
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа
      tags:
      - Order
  /orders/{reference_id}/partners:
    get:
      description: Получение заказов по reference_id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: reference id of the order
        in: path
        name: reference_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.OrderResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение заказов по reference_id
      tags:
      - Market-Order
  /orders/markets:
    post:
      consumes:
      - application/json
      description: Обновление заказа по решению клиента
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMarketOrderRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа по решению клиента
      tags:
      - Market-Order
  /orders/partners:
    post:
      consumes:
      - application/json
      description: Обновление заказа по решению партнера
      parameters:
      - description: body
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/dto.OrderPartnerUpdateRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление заказа по решению партнера
      tags:
      - Partner-Order
  /partners:
    get:
      consumes:
      - application/json
      description: Получение партнеров
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pagination limit
        in: query
        name: limit
        type: integer
      - description: pagination skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Partners'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение партнеров
      tags:
      - Partner
    post:
      consumes:
      - application/json
      description: Создание нового партнера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/models.Partner'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Создание нового партнера
      tags:
      - Partner
  /partners/{id}:
    get:
      consumes:
      - application/json
      description: Получение партнера
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the market
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Partner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Получение партнера
      tags:
      - Partner
    put:
      consumes:
      - application/json
      description: Обновление партнера
      parameters:
      - description: body
        in: body
        name: partner
        required: true
        schema:
          $ref: '#/definitions/models.Partner'
      - description: id of the market
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      security:
      - ApiKeyAuth: []
      summary: Обновление партнера
      tags:
      - Partner
  /partners/login:
    post:
      consumes:
      - application/json
      description: Авторизация партнера
      parameters:
      - description: body
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperrors.Response'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/httperrors.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperrors.Response'
      summary: Авторизация партнера
      tags:
      - Partner
  /partners/logout:
    get:
      consumes:
      - application/json
      description: выход авторизации партнера
      produces:
      - application/json
      summary: выход авторизации партнера
      tags:
      - Partner
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
