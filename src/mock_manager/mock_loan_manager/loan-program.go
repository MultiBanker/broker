// Code generated by MockGen. DO NOT EDIT.
// Source: src/manager/loan/loan-program.go

// Package mock_loan is a generated GoMock package.
package mock_loan

import (
	context "context"
	reflect "reflect"

	models "github.com/MultiBanker/broker/src/models"
	selector "github.com/MultiBanker/broker/src/models/selector"
	gomock "github.com/golang/mock/gomock"
)

// MockProgram is a mock of Program interface.
type MockProgram struct {
	ctrl     *gomock.Controller
	recorder *MockProgramMockRecorder
}

// MockProgramMockRecorder is the mock recorder for MockProgram.
type MockProgramMockRecorder struct {
	mock *MockProgram
}

// NewMockProgram creates a new mock instance.
func NewMockProgram(ctrl *gomock.Controller) *MockProgram {
	mock := &MockProgram{ctrl: ctrl}
	mock.recorder = &MockProgramMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProgram) EXPECT() *MockProgramMockRecorder {
	return m.recorder
}

// CreateLoanProgram mocks base method.
func (m *MockProgram) CreateLoanProgram(ctx context.Context, program models.LoanProgram) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoanProgram", ctx, program)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLoanProgram indicates an expected call of CreateLoanProgram.
func (mr *MockProgramMockRecorder) CreateLoanProgram(ctx, program interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoanProgram", reflect.TypeOf((*MockProgram)(nil).CreateLoanProgram), ctx, program)
}

// LoanProgram mocks base method.
func (m *MockProgram) LoanProgram(ctx context.Context, code string) (models.LoanProgram, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoanProgram", ctx, code)
	ret0, _ := ret[0].(models.LoanProgram)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoanProgram indicates an expected call of LoanProgram.
func (mr *MockProgramMockRecorder) LoanProgram(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoanProgram", reflect.TypeOf((*MockProgram)(nil).LoanProgram), ctx, code)
}

// LoanPrograms mocks base method.
func (m *MockProgram) LoanPrograms(ctx context.Context, paging selector.Paging) ([]models.LoanProgram, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoanPrograms", ctx, paging)
	ret0, _ := ret[0].([]models.LoanProgram)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// LoanPrograms indicates an expected call of LoanPrograms.
func (mr *MockProgramMockRecorder) LoanPrograms(ctx, paging interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoanPrograms", reflect.TypeOf((*MockProgram)(nil).LoanPrograms), ctx, paging)
}

// UpdateLoanProgram mocks base method.
func (m *MockProgram) UpdateLoanProgram(ctx context.Context, code string, program models.LoanProgram) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoanProgram", ctx, code, program)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLoanProgram indicates an expected call of UpdateLoanProgram.
func (mr *MockProgramMockRecorder) UpdateLoanProgram(ctx, code, program interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoanProgram", reflect.TypeOf((*MockProgram)(nil).UpdateLoanProgram), ctx, code, program)
}
